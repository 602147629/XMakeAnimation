<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="1220" height="800"
					   creationComplete="onPageComplete(event)"
					   frameRate="33">
	
	<fx:Script>
		<![CDATA[
			import com.DataManager;
			import com.demo.define.Config;
			import com.utils.HashMap;
			import com.windows.AnimationEditTab;
			import com.windows.CreateNewXML;
			import com.windows.CreateProjectPath;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.TabBar;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.NavigatorContent;
			
			private var file:File=new File();
			public var treeData:ArrayCollection;
			private var _contentArr:Array = [];
			
			private var _tabMap:HashMap =  new HashMap();
			
			//*************************************************************************
			//							public
			//*************************************************************************
			public function initProjectPath():void
			{
				this.projectPathLabel.text = Config.projectPath;
			}
			
			//*************************************************************************
			//							event
			//*************************************************************************
			protected function onPageComplete(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				checkEditConfig();
				animationTab.doubleClickEnabled = true;
				animationTab.addEventListener(MouseEvent.DOUBLE_CLICK,onDBClick);
			}
			
			protected function onOpenResXML(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				file.addEventListener(Event.SELECT,selectResource);
				file.url =Config.resPath;
				var txtFilter:FileFilter = new FileFilter("XML", "*.xml");
				file.browseForOpen("选择动画资源XML",[txtFilter]);
			}
			
			protected function onCreateNewResXML(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var creatView:CreateNewXML = new CreateNewXML();
				PopUpManager.addPopUp(creatView,this,true);
				PopUpManager.centerPopUp(creatView);
				
			}
			
			protected function selectResource(evt:Event):void
			{
				var f:File = evt.currentTarget as File;
				var animateID:String = getAnimateID(f);
				if(DataManager.getInstance().getXmlByID(f.url) == null)
				{
					var fs:FileStream = new FileStream();
					fs.open(f,FileMode.READ);
					var xml:XML = new XML(fs.readUTFBytes(fs.bytesAvailable));
					fs.close();
					DataManager.getInstance().addXml(f.url,xml);
					createNewTab(animateID,xml,f.url)
				}
				else
				{
					if(getTabByID(animateID)!=null)
					{
						animationTab.selectedChild = getTabByID(animateID);
					}
					else
					{
						createNewTab(animateID,DataManager.getInstance().getXmlByID(f.url),f.url);
					}
				}
			}
			
			//*************************************************************************
			//							private
			//*************************************************************************
			/*
			*animateID 为动画的类型(如 role enemy npc effect) + “_” + xml 名字去掉后缀
			*用作标签页名，和唯一标示的key
			*/
			private function getAnimateID(f:File):String
			{
				var cArr:Array = f.url.split("/");
				var resType:String = cArr[cArr.length-2];
				var xmlName:String = f.name.split(".")[0];
				return resType+ "_" + xmlName;
			}
			
			private function createNewTab(animateID:String,xml:XML,fileUrl:String):void
			{
				var cArr:Array = fileUrl.split("/");
				var resType:String = cArr[cArr.length-2];
				var content:NavigatorContent=new NavigatorContent();
				content.id = animateID;
				content.label = animateID;
				var tab:AnimationEditTab = new AnimationEditTab();
				tab.setAnimationXML(xml,fileUrl,resType);
				content.addElement(tab);
				animationTab.addChild(content);
				_contentArr.push(content);
				_tabMap.add(content,tab);
			}
			
			private function getTabByID(animateID:String):NavigatorContent
			{
				// TODO Auto Generated method stub
				for each(var content:NavigatorContent in _contentArr)
				{
					if(content.id == animateID)
					{
						return content;
					}
				}
				return null;
			}
			
			private function checkEditConfig():void
			{
				// TODO Auto Generated method stub
				var ef:File = new File(File.applicationDirectory.nativePath+"/AnimateEditConfig.xml");
				if(ef.exists)
				{
					var fs:FileStream = new FileStream();
					fs.open(ef,FileMode.READ);
					var xml:XML = new XML(fs.readUTFBytes(fs.bytesAvailable));
					fs.close();
					var p:String = xml.path[0].@projectPath;
					Config.projectPath = xml.path[0].@projectPath;
					initProjectPath();
				}
				else
				{
					var creatProjectPathView:CreateProjectPath = new CreateProjectPath();
					creatProjectPathView.setParent(this);
					PopUpManager.addPopUp(creatProjectPathView,this,true);
					PopUpManager.centerPopUp(creatProjectPathView);
				}
			}
			
			private var _curTab:NavigatorContent;
			protected function onDBClick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(DisplayObject(event.target).parent is TabBar)
				{
					var tab:NavigatorContent = getTabByID(event.target["label"]);
					if(tab!=null)
					{
						_curTab = tab;
						Alert.show("是否保存当前设置","警告",Alert.YES|Alert.NO|Alert.CANCEL,null,onCloseAlert);
					}
				}
			}
			
			private function onCloseAlert(event:CloseEvent):void
			{
				var et:AnimationEditTab = _tabMap.get(_curTab) as AnimationEditTab;
				switch(event.detail)
				{
					case Alert.YES:
						et.onSave();
						et.dispose();
						_contentArr.splice(_contentArr.indexOf(_curTab),1);
						animationTab.removeChild(_curTab);
						break;
					case Alert.NO:
						et.dispose();
						_contentArr.splice(_contentArr.indexOf(_curTab),1);
						animationTab.removeChild(_curTab);
						break;
					case Alert.CANCEL:
						break;
				}
				_curTab = null;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:HGroup x="0" y="0" width="296" height="28" horizontalAlign="center" verticalAlign="middle">
		<s:Button label="打开配置文件" click="onOpenResXML(event)"/>
		<s:Button label="新建配置文件" click="onCreateNewResXML(event)"/>
	</s:HGroup>
	<mx:TabNavigator id="animationTab" x="6" y="33" width="1200" height="760">
		<!--<s:NavigatorContent id="baseContent" width="100%" height="100%" label="选项卡 1">
		</s:NavigatorContent> -->
	</mx:TabNavigator>
	<s:Label id="projectPathLabel" x="457" y="10" width="387" height="25" backgroundColor="#E6DDDD"
			 text="标签" verticalAlign="middle"/>
	<s:Button x="866" y="14" label="设置项目路径"/>
</s:WindowedApplication>
